{"version":3,"sources":["drawData.js","sketch.js","App.js","serviceWorker.js","index.js"],"names":["GetDrawData","console","log","drawData","points","numPoints","pos","neg","spacing","wavePoints","negWavePoints","rectangles","bars","glass","betweenGlass","values","drawBoxHeight","drawBoxWidth","allBarValues","drawBarHeights","viewHeightMultiplier","barWidth","barPadX","glassPad","doubleGlassPad","barPosx","barCanvas","value","modCashFlows","push","sort","a","b","length","barPadx","Math","min","barPosX","window","innerHeight","getRectangleSVG","key","topLeftPoint","width","height","fill","strokeColor","strokeWidth","radius","x","y","stroke","rx","Sketch","React","useState","path","styles","barGray","gray","negativeColor","style","position","background","top","left","viewBox","cashFlows","initialInvest","canvasWidth","innerWidth","canvasHeight","canvasColor","lightCanvasColor","textColor","innerCashBoxColor","medLightGray","positiveColor","darkGray","calcCanvas","cashFlowBox","borderRadius","dRateBox","bottom","sketchBox","historyBoxDelete","right","innerCashBox","overflowY","overflowX","cashContents","fontSize","color","negCashContents","negInitialInvStyle","marginLeft","lineBreak","minusButtonStyle","minusLineStyle","header1","fontWeight","textAlign","header3","header2","cashInputStyle","border","negCashInputStyle","cashBottom","plusButtonStyle","plusLineStyle","plusBtnContainer","paddingLeft","paddingTop","cashBtmTxt","sliderStyle","App","r","setr","theNpv","setNpv","npvRan","setNpvRan","zeroCashInputStyle","minusButton","onClick","splice","findNPV","cx","cy","x1","y1","x2","y2","contents","placeholder","type","name","onChange","event","target","CashFlowContents","max","step","initialInvestValue","rDec","npv","flow","powerOf","parseInt","discountedFlow","pow","toFixed","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c2d8c2bc.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport {modCashFlows} from \"./App.js\";\r\n\r\nfunction getRectangleSVG(key, topLeftPoint, width, height, fill, strokeColor, strokeWidth, radius) {\r\n    return(\r\n        <rect \r\n        key={key}\r\n        x={topLeftPoint[0]} y ={topLeftPoint[1]} //array [x,y]\r\n        width = {width} height = {height}\r\n        fill={fill} //string\r\n        stroke={strokeColor} //string\r\n        strokeWidth={strokeWidth} \r\n        rx={radius}\r\n    />\r\n    )\r\n}\r\n\r\nfunction GetDrawData () {\r\n    console.log(\"Ran GetDrawData\");\r\n   \r\n    \r\n    //values Before \r\n    const drawData = {\r\n        points: { \r\n            numPoints: {pos: null, neg: null},\r\n            spacing: {pos: null, neg: null},    \r\n            wavePoints: [],\r\n            negWavePoints: []  \r\n        },\r\n        rectangles: {\r\n            bars: [],\r\n            glass: [],\r\n            betweenGlass: null\r\n        },\r\n        values: {\r\n            drawBoxHeight: 100,\r\n            drawBoxWidth: 200,\r\n            allBarValues: [],\r\n            drawBarHeights: [],\r\n            viewHeightMultiplier: null,\r\n            barWidth: null,\r\n            barPadX: null,\r\n            glassPad: null,\r\n            doubleGlassPad: null,\r\n            barPosx: null,\r\n            barCanvas: null\r\n        }\r\n    }\r\n    \r\n    for (var value in modCashFlows) {\r\n        if (modCashFlows[value] >= 0) {\r\n            drawData.values.allBarValues.push(modCashFlows[value]);\r\n            \r\n        }\r\n        else if (modCashFlows[value] < 0) {\r\n            drawData.values.allBarValues.push(modCashFlows[value] * -1);\r\n        }\r\n    }\r\n    drawData.values.allBarValues.sort((a,b) => b-a);\r\n    drawData.values.viewHeightMultiplier = 92/drawData.values.allBarValues[0];\r\n\r\n    \r\n    \r\n    for (var value in modCashFlows) {\r\n        if (modCashFlows[value] >= 0) {\r\n            drawData.values.drawBarHeights.push(modCashFlows[value] * drawData.values.viewHeightMultiplier);\r\n            drawData.points.numPoints.pos +=1;\r\n        }\r\n        if (modCashFlows[value] < 0) {\r\n            drawData.values.drawBarHeights.push(modCashFlows[value] * drawData.values.viewHeightMultiplier);\r\n            drawData.points.numPoints.neg +=1;\r\n        } \r\n    }\r\n\r\n    drawData.values.barWidth = (drawData.values.drawBoxWidth / (drawData.values.drawBarHeights.length) / 1.5);\r\n    drawData.values.barPadx = drawData.values.barWidth / 2;\r\n    drawData.values.glassPad = Math.min(drawData.values.barPadx / 4, 2);\r\n    drawData.values.doubleGlassPad = drawData.values.glassPad * 2;\r\n    drawData.rectangles.betweenGlass = drawData.values.barPadx - drawData.values.doubleGlassPad;\r\n    drawData.values.barPosX = (drawData.values.barPadx / 2);\r\n    drawData.values.barCanvas = drawData.values.drawBoxHeight - 4;\r\n\r\n    //push svg data for bars\r\n\r\n\r\n    \r\n\r\n        \r\n    return(drawData);\r\n    \r\n}\r\nexport default GetDrawData;\r\n","import React from 'react';\r\nimport DrawSmooth  from \"./bezierInterp.js\";\r\nimport GetDrawData from \"./drawData.js\"\r\nimport { spring } from 'popmotion';\r\nimport { styles } from './App.js'\r\n \r\nconst canvasHeight = window.innerHeight/2;\r\nconst canvasWidth = canvasHeight * 2;\r\nconst pathSettle = 50;\r\n\r\nlet updateData = true;\r\nlet animDrawData = [];\r\nlet drawData = [];\r\n\r\nfunction getRectangleSVG(key, topLeftPoint, width, height, fill, strokeColor, strokeWidth, radius) {\r\n  return(\r\n      <rect \r\n      key={key}\r\n      x={topLeftPoint[0]} y ={topLeftPoint[1]} //array [x,y]\r\n      width = {width} height = {height}\r\n      fill={fill} //string\r\n      stroke={strokeColor} //string\r\n      strokeWidth={strokeWidth} \r\n      rx={radius}\r\n  />\r\n  )\r\n}\r\n\r\nfunction Sketch(){\r\n  console.log(\"Ran Sketch\");  \r\n  const [path, setpath] = React.useState();\r\n\r\n  if (updateData){\r\n    drawData = GetDrawData();\r\n    //push wave points and rectange svg to local drawData\r\n    for (var value in drawData.values.drawBarHeights) {\r\n      let key = value;\r\n      if (drawData.values.drawBarHeights[value] >= 0) {  \r\n          drawData.rectangles.bars.push(getRectangleSVG(key, [drawData.values.barPosX, drawData.values.barCanvas - drawData.values.drawBarHeights[value]], drawData.values.barWidth, drawData.values.drawBarHeights[value], styles.barGray));\r\n          drawData.rectangles.glass.push(getRectangleSVG(\"glass\" + key, [drawData.values.barPosX - drawData.values.glassPad, 2], drawData.values.barWidth + drawData.values.doubleGlassPad, 96, \"none\", styles.gray, .3, 1));\r\n          \r\n          //drawData.points.wavePoints.push([drawData.values.barPosX, drawData.values.barCanvas - drawData.values.drawBarHeights[value]]);\r\n          drawData.points.wavePoints.push([drawData.values.barPosX + drawData.values.barWidth, drawData.values.barCanvas - drawData.values.drawBarHeights[value]]);         \r\n          //drawData.points.negWavePoints.push([drawData.values.barPosX, drawData.values.drawBoxHeight]);\r\n          drawData.points.negWavePoints.push([drawData.values.barPosX + drawData.values.barWidth, drawData.values.drawBoxHeight]);\r\n          \r\n          drawData.values.barPosX += (drawData.values.barWidth + drawData.values.barPadx);\r\n      }\r\n      else if (drawData.values.drawBarHeights[value] < 0) {\r\n          drawData.rectangles.bars.push(getRectangleSVG(key, [drawData.values.barPosX, drawData.values.barCanvas - (drawData.values.drawBarHeights[value] * -1)], drawData.values.barWidth, (drawData.values.drawBarHeights[value] * -1), styles.negativeColor));\r\n          drawData.rectangles.glass.push(getRectangleSVG(\"glass\" + key, [drawData.values.barPosX - drawData.values.glassPad, 2], drawData.values.barWidth + drawData.values.doubleGlassPad, 96, \"none\", styles.gray, .3, 1));\r\n\r\n          //drawData.points.negWavePoints.push([drawData.values.barPosX, drawData.values.barCanvas - drawData.values.drawBarHeights[value] * -1]);\r\n          drawData.points.negWavePoints.push([drawData.values.barPosX + drawData.values.barWidth, drawData.values.barCanvas - drawData.values.drawBarHeights[value] * -1]);\r\n          //  drawData.points.wavePoints.push([drawData.values.barPosX, drawData.values.drawBoxHeight]);\r\n          drawData.points.wavePoints.push([drawData.values.barPosX + drawData.values.barWidth, drawData.values.drawBoxHeight]);\r\n          \r\n          drawData.values.barPosX += (drawData.values.barWidth + drawData.values.barPadx);\r\n          \r\n      }\r\n    }\r\n  }\r\n  else {\r\n    drawData = animDrawData;\r\n  }\r\n  \r\n  async function runSpring() {    \r\n    for (let point in drawData.points.wavePoints) {\r\n      spring({ from: drawData.points.wavePoints[point][1], to: pathSettle, stiffness: 150, damping: 5 })\r\n          .start(v => {drawData.points.wavePoints[point][1] = v; setpath(DrawSmooth(drawData.points.wavePoints, 1))})\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <svg\r\n        style={{\r\n        position: \"absolute\",\r\n        background: 'none',\r\n        top: \"10%\",\r\n        left: \"5%\",\r\n        width: \"90%\", \r\n        height: \"80%\"\r\n        }}\r\n        viewBox=\"0 0 200 100\"\r\n        >{drawData.rectangles.bars}{drawData.rectangles.glass}{path}\r\n      </svg>\r\n      <div>\r\n      {/* <button name=\"animate\" onClick ={ () => {updateData= false; animDrawData = drawData; runSpring()}}>Animate Waves</button>   */}\r\n      \r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n//const lineCommand = point => `L ${point[0]} ${point[1]}`\r\n\r\n\r\nexport default Sketch;","import React from 'react';\nimport Sketch from './sketch'\nimport './App.css';\nimport GetDrawData from \"./drawData.js\";\nexport var modCashFlows = [];\n\n\nlet currentCFValue = null;\nlet cashFlows = [0];\nlet initialInvest = 0;\nlet cashFlowString = \"\";\nlet canvasWidth = window.innerWidth * .9;\nlet canvasHeight = canvasWidth/2.32;\nexport let styles = {\n  canvasWidth: canvasWidth,\n  canvasHeight: canvasHeight,\n  canvasColor: \"#E9E9E9\",\n  lightCanvasColor: \"#FFFFFF\",\n  textColor: \"#000000\",\n  innerCashBoxColor: \"#FBFBFB\",\n  medLightGray: \"#D8D8D8\",\n  negativeColor: \"#FF2223\",\n  positiveColor: \"#4E556A\",\n  darkGray: \"#3A3A3A\",\n  gray: \"#ACACAC\",\n  barGray: \"#4E556A\"\n\n}\n\n\n\n\nconst calcCanvas = {\n  position: \"absolute\",\n  left: \"5%\",\n  top: \"10%\",\n  \n  background: styles.canvasColor,\n  height: \"40vw\",\n  width: \"90vw\",\n}\nconst cashFlowBox = {\n  position: \"absolute\",\n  top: \"14%\",\n  left: \"5%\", \n  background: styles.lightCanvasColor,\n  height: \"56%\",\n  width: \"17%\",\n  borderRadius: 15\n}\n\nconst dRateBox = {\n  position: \"absolute\",\n  bottom: \"9%\",\n  left: \"5%\", \n  background: styles.lightCanvasColor,\n  height: \"17%\",\n  width: \"17%\",\n  borderRadius: 15\n}\n\nconst sketchBox = {\n  position: \"absolute\",\n  bottom: \"9%\",\n  left: \"24%\", \n  background: styles.lightCanvasColor,\n  height: \"77%\",\n  width: \"52%\",\n  borderRadius: 15\n}\n\nconst historyBox = {\n  position: \"absolute\",\n  bottom: \"9%\",\n  right: \"5%\", \n  background: styles.lightCanvasColor,\n  height: \"77%\",\n  width: \"17%\",\n  borderRadius: 15 \n}\n\nconst historyBoxDelete = {\n  position: \"absolute\",\n  bottom: \"0%\",\n  right: \"0%\", \n  background: styles.lightCanvasColor,\n  height: \"100%\",\n  width: \"19%\",\n  borderRadius: 0\n}\n\nconst innerCashBox = {\n  position: \"absolute\",\n  top: \"12%\", \n  background: styles.innerCashBoxColor,\n  height: \"76%\",\n  width: \"100%\",\n  overflowY: \"scroll\",\n  overflowX: \"auto\"\n  //fontWeight: \"800\"\n}\n\nconst cashContents = { \n  fontSize: \"2vw\",\n  width: \"100%\",\n  height:\"2.6vw\",\n  color: styles.barGray\n}\nconst negCashContents = { \n  fontSize: \"2vw\",\n  width: \"100%\",\n  height:\"2.6vw\",\n  color: styles.negativeColor\n}\n\nconst initalInvStyle = { \n  fontSize: \"2vw\",\n  width: \"auto\",\n  height:\"2.6vw\",\n  marginLeft: \"15%\"\n}\nconst negInitialInvStyle = { \n  fontSize: \"2vw\",\n  width: \"auto\",\n  height:\"2.6vw\",\n  marginLeft: \"15%\",\n  color: styles.negativeColor,\n \n\n}\n\nconst lineBreak = {\n    background: \"#F0F0F0\",\n    height: \"1px\",\n    left: \"15%\",\n    width: \"75%\",\n    position: \"absolute\"\n}\nconst minusButtonStyle = {\n \n  fill: styles.innerCashBoxColor,\n  color: styles.medLightGray,\n  stroke: styles.medLightGray,\n  strokeWidth: \"8%\"\n}\nconst minusLineStyle = {\n  stroke: styles.medLightGray,\n  strokeWidth: \"8%\"\n}\n\nconst header1 = {\n  fontWeight: \"bold\",\n  fontSize: \"1vw\",\n  textAlign: \"center\"\n}\nconst header3 = {\n  fontWeight: \"bold\",\n  fontSize: \"1.2vw\",\n  textAlign: \"center\"\n}\nconst header2 = {\n  position: \"absolute\",\n  fontWeight: \"bold\",\n  fontSize: \"2vw\",\n  left: \"5%\"\n  \n}\nconst cashInputStyle = {\n  position: \"absolute\",\n  background: \"none\",\n  width: \"57%\",\n  height: \"14%\",\n  fontSize: \"2vw\",\n  border: \"none\",\n  color: styles.barGray\n}\n\nconst negCashInputStyle = {\n  position: \"absolute\",\n  background: \"none\",\n  width: \"57%\",\n  height: \"14%\",\n  fontSize: \"2vw\",\n  border: \"none\",\n  color: styles.negativeColor\n}\nconst cashBottom= {\n  position: \"absolute\",\n  top: \"88%\",\n  left: \"0%\",\n  width: \"100%\",\n  height: \"12%\",\n  background: \"none\",\n  fontWeight: \"500\",\n  fontSize: \".9vw\",\n  color: styles.darkGray\n}\nconst plusButtonStyle = {\n \n  fill: styles.innerCashBoxColor,\n  color: styles.darkGray,\n  stroke: styles.darkGray,\n  strokeWidth: \"5%\"\n}\nconst plusLineStyle = {\n  stroke: styles.darkGray,\n  strokeWidth: \"5%\"\n}\nconst plusBtnContainer= {\n  position: \"absolute\",\n  paddingLeft: \"70%\",\n  paddingTop: \"4%\"\n}\nconst cashBtmTxt = {\n  position: \"absolute\",\n  left: \"28%\"\n}\n\nconst sliderStyle = {\n  position: \"absolute\",\n  top: \"40%\",\n  left: \"18%\",\n  background: \"styles.canvasColor\",\n  width: \"60%\"\n}\n\n\n\n\n\n\nfunction App() {\n\n\n\n//rerender the DOM when r changes\nconst [r, setr] = React.useState(50);\n//rerender the DOM when theNPV changes\nconst [theNpv, setNpv] = React.useState(0);\n//hook that makes sure dom is rerendered if a button is clicked, even if theNpv hasn't changed\nconst [npvRan, setNpvRan] = React.useState(0);\n\nlet zeroCashInputStyle = {\n  position: \"absolute\",\n  background: \"none\",\n  width: \"80%\",\n  height: \"14%\",\n  fontSize: \".8vw\",\n  border: \"none\",\n  color: styles.negativeColor\n}\nfunction minusButton(value) {\n  return(\n      <svg height=\"1.2vw\" width=\"2vw\" onClick= {() => {cashFlows.splice(value,1); setNpv(findNPV(cashFlows, r, initialInvest))} } >\n  \n        <circle style={minusButtonStyle} cx=\"56%\" cy=\"50%\" r=\"32%\"/>\n        <line style={minusLineStyle} x1=\"44%\" y1=\"50%\" x2=\"67%\" y2=\"50%\"/>    \n      </svg>\n  )\n}\n\n \nfunction cashFlowPlusBtn() {\n  return(\n    <svg height=\"1.5vw\" width=\"1.5vw\" style={plusBtnContainer} onClick= {() => {cashFlows.push(0); setNpv(findNPV(cashFlows, r, initialInvest))} } >   \n      <circle style={plusButtonStyle} cx=\"50%\" cy=\"50%\" r=\"45%\"/>\n      <line style={plusLineStyle} x1=\"25%\" y1=\"50%\" x2=\"75%\" y2=\"50%\"/>    \n      <line style={plusLineStyle} x1=\"50%\" y1=\"75%\" x2=\"50%\" y2=\"25%\"/> \n    </svg>\n)\n  \n}\n\n//console.log(\"r \" + r);\nfunction CashFlowContents() {\n  if (initialInvest === \"\") {\n    zeroCashInputStyle.fontSize = \".8vw\";\n  }\n  else if (initialInvest >= 0 && initialInvest != \"\") {\n    zeroCashInputStyle.fontSize = \"2vw\";\n    zeroCashInputStyle.color = styles.negativeColor;\n  }\n  else if (initialInvest < 0) {\n    zeroCashInputStyle.fontSize = \"2vw\";\n    zeroCashInputStyle.color = styles.positiveColor;\n  }\n  let contents = [];\n  console.log(\"initial invest\" + initialInvest);\n      contents.push(\n        <div>\n          <div style={negInitialInvStyle}>        \n            <input style={zeroCashInputStyle} placeholder=\"<Enter Initial Investment Here>\"  key={\"inINVhold\"}  type=\"text\" name ={\"initialInv\"} onChange={(event) => {initialInvest = event.target.value; setNpv(findNPV(cashFlows, r, initialInvest)) }} />  \n          </div>\n          <div style={lineBreak}/>\n        </div>\n      )\n\n  \n\n  for (let value in cashFlows) {\n    if (cashFlows[value] < 0){\n      contents.push(\n        <div>\n          <div style={negCashContents}>\n            {minusButton(value)} \n            $ {' '}  \n            <input style={negCashInputStyle} key={\"cashflow\" + value} value={cashFlows[value]} type=\"text\" name ={value + \"cashFlow\"} onChange={(event) => {cashFlows[value] = event.target.value; setNpv(findNPV(cashFlows, r, initialInvest))}} />  \n          </div>\n          <div style={lineBreak}/>\n        </div>\n        )\n\n    }\n    else {\n    contents.push(\n      <div>\n        <div style={cashContents} >\n          {minusButton(value)} \n          $ {' '}  \n          <input style={cashInputStyle} key={\"cashflow\" + value} value={cashFlows[value]} type=\"text\" name ={value + \"cashFlow\"} onChange={(event) => {cashFlows[value] = event.target.value; setNpv(findNPV(cashFlows, r, initialInvest))}} />  \n        </div>\n        <div style={lineBreak}/>\n      </div>\n      )\n    }\n  }\n  return (contents)\n}\nfunction DiscountRateSlider() {\n  return(\n    <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" style={sliderStyle} name =\"ROR\" onChange={(event) => setNpv(findNPV(cashFlows, event.target.value, initialInvest))} />\n  )   \n}\n\nreturn (\n  <div style={calcCanvas}>\n    <p style={header2}>NET PRESENT VALUE CALCULATOR</p>\n    <div style={cashFlowBox}><p style={header1}>CASH FLOWS</p>\n      <div style={innerCashBox}>{CashFlowContents()}</div>\n      <div style={cashBottom}>{cashFlowPlusBtn()}<p style={cashBtmTxt}>Add another</p></div>\n    </div>\n\n    <div style={dRateBox}>\n<p style={header1}>DISCOUNT RATE: {r}%</p>{DiscountRateSlider()}\n    </div>\n\n    <div style={sketchBox}><p style={header3}>NPV: {theNpv}</p><Sketch/></div>\n    <div style={historyBoxDelete}></div>\n  </div>\n)\n\n  function findNPV(cashFlows, r, initialInvestValue) {\n    //push r value to interface \n    setr(r);\n    //ensures DOM will update even if npv didnt change\n    setNpvRan(npvRan + 1);\n    \n  \n    initialInvest = initialInvestValue;\n    \n    let rDec = r/100;\n    let npv = null;\n    //reset modded cash flows\n    modCashFlows = [];\n    modCashFlows.push(initialInvest * -1);\n    for (let flow in cashFlows) {\n     let powerOf=parseInt(flow) +  1;\n     let discountedFlow = cashFlows[flow] / Math.pow(1 + rDec,  powerOf);\n     modCashFlows.push(discountedFlow);\n     npv += discountedFlow;\n    }\n  \n    console.log(\"r \" + r);\n    console.log(\"cashflows \" + cashFlows);\n    console.log(\"initial Invest \" + initialInvest);\n    console.log(\"npv \" + npv);\n    console.log(theNpv);\n    console.log(\"modflows \" + modCashFlows);\n    return ((npv - initialInvest).toFixed(2));\n  }\n  //{cashFlows.map((number) => <li key ={number.toString()}>{number}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n} \n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}