{"version":3,"sources":["drawData.js","sketch.js","graph.js","App.js","serviceWorker.js","index.js"],"names":["GetDrawData","console","log","drawData","points","numPoints","pos","neg","spacing","wavePoints","negWavePoints","rectangles","bars","glass","betweenGlass","modFlows","values","drawBoxHeight","drawBoxWidth","allBarValues","drawBarHeights","viewHeightMultiplier","barWidth","barPadX","glassPad","doubleGlassPad","barPosx","barCanvas","value","calcData","modCashFlows","push","sort","a","b","length","barPadx","Math","min","barPosX","getRectangleSVG","key","topLeftPoint","width","height","fill","strokeColor","strokeWidth","radius","x","y","stroke","rx","Sketch","React","useState","path","numBars","textWidth","styles","positiveColor","gray","negativeColor","style","fontSize","round","position","background","top","left","viewBox","Graph","graphWidth","window","innerWidth","graphHeight","graphColor","theNPV","irrColor","data","npvSnap","className","title","color","cashFlows","canvasWidth","loggedNPVs","initialInvest","snapGraphX","r","canvasHeight","canvasColor","lightCanvasColor","textColor","innerCashBoxColor","medLightGray","darkGray","npvBtnColor","calcCanvas","cashFlowBox","borderRadius","dRateBox","bottom","sketchBox","historyBox","right","innerHistoryBox","overflowY","overflowX","innerCashBox","cashContents","negCashContents","negInitialInvStyle","marginLeft","lineBreak","minusButtonStyle","minusLineStyle","header1","fontWeight","textAlign","header3","header2","cashInputStyle","border","negCashInputStyle","cashBottom","plusButtonStyle","plusLineStyle","plusBtnContainer","paddingLeft","paddingTop","cashBtmTxt","sliderStyle","cursor","snapButtonPos","histTitle","histTitle2","App","npvRan","setNpvRan","zeroCashInputStyle","minusButton","onClick","splice","findNPV","cx","cy","x1","y1","x2","y2","dollSymbol","numSize","numX","numY","dollColor","contents","placeholder","type","name","onChange","event","target","parseInt","CashFlowContents","max","step","Button","fontFamily","padding","variant","unshift","toFixed","float","display","disableElevation","initialInvestValue","npvOut","rDec","npv","flow","powerOf","discountedFlow","pow","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5ffe4581.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport {calcData} from \"./App.js\";\r\n\r\nfunction getRectangleSVG(key, topLeftPoint, width, height, fill, strokeColor, strokeWidth, radius) {\r\n    return(\r\n        <rect \r\n        key={key}\r\n        x={topLeftPoint[0]} y ={topLeftPoint[1]} //array [x,y]\r\n        width = {width} height = {height}\r\n        fill={fill} //string\r\n        stroke={strokeColor} //string\r\n        strokeWidth={strokeWidth} \r\n        rx={radius}\r\n    />\r\n    )\r\n}\r\n\r\nfunction GetDrawData () {\r\n    console.log(\"Ran GetDrawData\");\r\n   \r\n    \r\n    //values Before \r\n    const drawData = {\r\n        points: { \r\n            numPoints: {pos: null, neg: null},\r\n            spacing: {pos: null, neg: null},    \r\n            wavePoints: [],\r\n            negWavePoints: []  \r\n        },\r\n        rectangles: {\r\n            bars: [],\r\n            glass: [],\r\n            betweenGlass: null,\r\n            modFlows: []\r\n        },\r\n        values: {\r\n            drawBoxHeight: 100,\r\n            drawBoxWidth: 200,\r\n            allBarValues: [],\r\n            drawBarHeights: [],\r\n            viewHeightMultiplier: null,\r\n            barWidth: null,\r\n            barPadX: null,\r\n            glassPad: null,\r\n            doubleGlassPad: null,\r\n            barPosx: null,\r\n            barCanvas: null\r\n        }\r\n    }\r\n    \r\n    for (var value in calcData.modCashFlows) {\r\n        if (calcData.modCashFlows[value] >= 0) {\r\n            drawData.values.allBarValues.push(calcData.modCashFlows[value]);\r\n            \r\n        }\r\n        else if (calcData.modCashFlows[value] < 0) {\r\n            drawData.values.allBarValues.push(calcData.modCashFlows[value] * -1);\r\n        }\r\n    }\r\n    drawData.values.allBarValues.sort((a,b) => b-a);\r\n    drawData.values.viewHeightMultiplier = 92/drawData.values.allBarValues[0];\r\n\r\n    \r\n    \r\n    for (var value in calcData.modCashFlows) {\r\n        if (calcData.modCashFlows[value] >= 0) {\r\n            drawData.values.drawBarHeights.push(calcData.modCashFlows[value] * drawData.values.viewHeightMultiplier);\r\n            drawData.points.numPoints.pos +=1;\r\n        }\r\n        if (calcData.modCashFlows[value] < 0) {\r\n            drawData.values.drawBarHeights.push(calcData.modCashFlows[value] * drawData.values.viewHeightMultiplier);\r\n            drawData.points.numPoints.neg +=1;\r\n        } \r\n    }\r\n\r\n    drawData.values.barWidth = (drawData.values.drawBoxWidth / (drawData.values.drawBarHeights.length) / 1.5);\r\n    drawData.values.barPadx = drawData.values.barWidth / 2;\r\n    drawData.values.glassPad = Math.min(drawData.values.barPadx / 4, 2);\r\n    drawData.values.doubleGlassPad = drawData.values.glassPad * 2;\r\n    drawData.rectangles.betweenGlass = drawData.values.barPadx - drawData.values.doubleGlassPad;\r\n    drawData.values.barPosX = (drawData.values.barPadx / 2);\r\n    drawData.values.barCanvas = drawData.values.drawBoxHeight - 4;\r\n\r\n    //push svg data for bars\r\n\r\n\r\n    \r\n\r\n        \r\n    return(drawData);\r\n    \r\n}\r\nexport default GetDrawData;\r\n","import React from 'react';\r\nimport DrawSmooth  from \"./bezierInterp.js\";\r\nimport GetDrawData from \"./drawData.js\"\r\nimport { spring } from 'popmotion';\r\nimport { styles } from './App.js'\r\nimport {calcData} from \"./App.js\";\r\n \r\n\r\n\r\nconst pathSettle = 50;\r\n\r\nlet updateData = true;\r\nlet animDrawData = [];\r\nlet drawData = [];\r\n\r\n\r\n\r\nfunction getRectangleSVG(key, topLeftPoint, width, height, fill, strokeColor, strokeWidth, radius) {\r\n  return(  \r\n      <rect \r\n      key={key}\r\n      x={topLeftPoint[0]} y ={topLeftPoint[1]} //array [x,y]\r\n      width = {width} height = {height}\r\n      fill={fill} //string\r\n      stroke={strokeColor} //string\r\n      strokeWidth={strokeWidth} \r\n      rx={radius}\r\n    />\r\n  \r\n  )\r\n}\r\n\r\nfunction Sketch(){\r\n  console.log(\"Ran Sketch\");  \r\n  \r\n  const [path, setpath] = React.useState();\r\n \r\n  if (updateData){\r\n    drawData = GetDrawData();\r\n    let numBars = drawData.values.drawBarHeights.length;\r\n    let  textWidth = \".2vw\";\r\n    if (numBars >= 12) {\r\n    textWidth = (2/numBars) + \"vw\";\r\n    } \r\n    //push wave points and rectange svg to local drawData\r\n    for (var value in drawData.values.drawBarHeights) {\r\n      let key = value;\r\n      if (drawData.values.drawBarHeights[value] >= 0) {  \r\n          drawData.rectangles.bars.push(getRectangleSVG(key, [drawData.values.barPosX, drawData.values.barCanvas - drawData.values.drawBarHeights[value]], drawData.values.barWidth, drawData.values.drawBarHeights[value], styles.positiveColor));\r\n          drawData.rectangles.glass.push(getRectangleSVG(\"glass\" + key, [drawData.values.barPosX - drawData.values.glassPad, 2], drawData.values.barWidth + drawData.values.doubleGlassPad, 96, \"none\", styles.gray, .3, 1));\r\n          //drawData.points.wavePoints.push([drawData.values.barPosX, drawData.values.barCanvas - drawData.values.drawBarHeights[value]]);\r\n          drawData.points.wavePoints.push([drawData.values.barPosX + drawData.values.barWidth, drawData.values.barCanvas - drawData.values.drawBarHeights[value]]);         \r\n          //drawData.points.negWavePoints.push([drawData.values.barPosX, drawData.values.drawBoxHeight]);\r\n          drawData.points.negWavePoints.push([drawData.values.barPosX + drawData.values.barWidth, drawData.values.drawBoxHeight]);\r\n          \r\n         \r\n      }\r\n      else if (drawData.values.drawBarHeights[value] < 0) {\r\n          drawData.rectangles.bars.push(getRectangleSVG(key, [drawData.values.barPosX, drawData.values.barCanvas - (drawData.values.drawBarHeights[value] * -1)], drawData.values.barWidth, (drawData.values.drawBarHeights[value] * -1), styles.negativeColor));\r\n          drawData.rectangles.glass.push(getRectangleSVG(\"glass\" + key, [drawData.values.barPosX - drawData.values.glassPad, 2], drawData.values.barWidth + drawData.values.doubleGlassPad, 96, \"none\", styles.gray, .3, 1));\r\n\r\n          //drawData.points.negWavePoints.push([drawData.values.barPosX, drawData.values.barCanvas - drawData.values.drawBarHeights[value] * -1]);\r\n          drawData.points.negWavePoints.push([drawData.values.barPosX + drawData.values.barWidth, drawData.values.barCanvas - drawData.values.drawBarHeights[value] * -1]);\r\n          //  drawData.points.wavePoints.push([drawData.values.barPosX, drawData.values.drawBoxHeight]);\r\n          drawData.points.wavePoints.push([drawData.values.barPosX + drawData.values.barWidth, drawData.values.drawBoxHeight]);\r\n          \r\n          \r\n          \r\n      }\r\n \r\n      //drawData.rectangles.modFlows.push(<p style={{position: \"absolute\", left: modPosX + \"%\", fontSize: \"1vw\", background: \"blue\" }}>3</p>);\r\n      drawData.rectangles.modFlows.push(<text key={key + \"modText\"} style={{fontSize: textWidth}} x={drawData.values.barPosX -1} y=\"102\">{Math.round(calcData.modCashFlows[value])}</text>)\r\n      drawData.values.barPosX += (drawData.values.barWidth + drawData.values.barPadx);\r\n    }\r\n\r\n    \r\n    // function getModFlowBox(modValue, leftPad) {\r\n    //   let boxWidth = 50;\r\n    //   return (\r\n    //     <p style= {{position: \"absolute\", left: leftPad, width: boxWidth, background: \"blue\"}}>{modValue}</p>\r\n    //   )\r\n    // }\r\n  }\r\n  else {\r\n    drawData = animDrawData;\r\n  }\r\n\r\n  async function runSpring() {    \r\n    for (let point in drawData.points.wavePoints) {\r\n      spring({ from: drawData.points.wavePoints[point][1], to: pathSettle, stiffness: 150, damping: 5 })\r\n          .start(v => {drawData.points.wavePoints[point][1] = v; setpath(DrawSmooth(drawData.points.wavePoints, 1))})\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <svg\r\n        style={{\r\n        position: \"absolute\",\r\n        background: 'none',\r\n        top: \"10%\",\r\n        left: \"5%\",\r\n        width: \"90%\", \r\n        height: \"80%\"\r\n        }}\r\n        viewBox=\"0 0 200 100\"\r\n      >{drawData.rectangles.bars}{drawData.rectangles.modFlows}{drawData.rectangles.glass}{path}\r\n      </svg>\r\n      <div>\r\n      {/* <button name=\"animate\" onClick ={ () => {updateData= false; animDrawData = drawData; runSpring()}}>Animate Waves</button>   */}\r\n      \r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n//const lineCommand = point => `L ${point[0]} ${point[1]}`\r\n\r\n\r\nexport default Sketch;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport '../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, LineSeries, MarkSeries, LabelSeries, VerticalGridLines, XAxis, YAxis} from 'react-vis';\r\nimport {styles} from './App.js';\r\nimport {calcData} from \"./App.js\";\r\n\r\n\r\n\r\n\r\nfunction Graph()  {\r\n    let canvasWidth = window.innerWidth;\r\n    let graphWidth = canvasWidth* .15;\r\n    let graphHeight = graphWidth;\r\n    console.log(\"ran graph\");\r\n    \r\n    let graphColor = styles.gray;\r\n    if (calcData.theNPV === 0) {\r\n        graphColor = styles.irrColor;\r\n    }\r\n\r\n    \r\n    let fontSize = \".5vw\"\r\n   \r\n    let data = calcData.npvSnap;\r\n\r\n  \r\n    \r\n    // const data = [\r\n    //   {x: 0, y: 8, label: '200', style: {fontSize: fontSize} },\r\n    //   {x: 1, y: -5, label: 'woah'},\r\n    //   {x: 2, y: 4, label: 'woah'},\r\n    //   {x: 3, y: 9},\r\n    //   {x: 4, y: 1},\r\n    //   {x: 5, y: 7},\r\n    //   {x: 6, y: 6},\r\n    //   {x: 7, y: 3},\r\n    //   {x: 8, y: 2},\r\n    //   {x: 9, y: 0, label: 'woah'}\r\n    // ];\r\n    return (\r\n      <div>\r\n        <div style={{position: \"absolute\", background: \"none\", top: \"10%\"}}className=\"Graph\">\r\n            <XYPlot style={{position: \"absolute\"}}height={graphHeight} width={graphWidth}>    \r\n        \r\n            \r\n            <YAxis title=\"NPV\" />\r\n            <XAxis title=\"Discount Rate\" />\r\n            {/* <LabelSeries color={graphColor} data={data}  /> */}\r\n            <MarkSeries color={graphColor} data={data}  />\r\n            <LineSeries color={graphColor} data={[{x: 0, y:0}, {x: 100, y: 0}]} />\r\n            </XYPlot>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default Graph;","import React from 'react';\nimport Sketch from './sketch'\nimport './App.css';\nimport Graph from './graph.js';\nimport GetDrawData from \"./drawData.js\";\nimport Button from '@material-ui/core/Button';\nexport var modCashFlows = [];\n\n\n\nlet cashFlows = [0];\n\n\nlet canvasWidth = window.innerWidth * .9;\nlet canvasHeight = canvasWidth/2.32;\nlet loggedNPVs = [];\n\nexport let calcData = {\n  initialInvest: 0,\n  modCashFlows: [],\n  theNPV: [],\n  npvSnap: [],\n  snapGraphX: 0,\n  r: 50\n};\nexport let styles = {\n  canvasWidth: canvasWidth,\n  canvasHeight: canvasHeight,\n  canvasColor: \"#E9E9E9\",\n  lightCanvasColor: \"#FFFFFF\",\n  textColor: \"#000000\",\n  innerCashBoxColor: \"#FBFBFB\",\n  medLightGray: \"#D8D8D8\",\n  negativeColor: \"#F50057\",\n  positiveColor: \"#27293E\",\n  darkGray: \"#3A3A3A\",\n  gray: \"#ACACAC\",\n  irrColor: \"#53DD6C\",\n  npvBtnColor: \"#57A773\"\n \n\n}\n\n\n\n\nconst calcCanvas = {\n  position: \"absolute\",\n  left: \"5%\",\n  top: \"10%\",\n  \n  background: styles.canvasColor,\n  height: \"40vw\",\n  width: \"90vw\",\n}\nconst cashFlowBox = {\n  position: \"absolute\",\n  top: \"14%\",\n  left: \"5%\", \n  background: styles.lightCanvasColor,\n  height: \"56%\",\n  width: \"17%\",\n  borderRadius: \"1vw\"\n}\n\nconst dRateBox = {\n  position: \"absolute\",\n  bottom: \"9%\",\n  left: \"5%\", \n  background: styles.lightCanvasColor,\n  height: \"17%\",\n  width: \"17%\",\n  borderRadius: \"1vw\"\n}\n\nconst sketchBox = {\n  position: \"absolute\",\n  bottom: \"9%\",\n  left: \"24%\", \n  background: styles.lightCanvasColor,\n  height: \"77%\",\n  width: \"52%\",\n  borderRadius: \"1vw\"\n}\n\nconst historyBox = {\n  position: \"absolute\",\n  bottom: \"9%\",\n  right: \"5%\", \n  background: styles.lightCanvasColor,\n  height: \"77%\",\n  width: \"17%\",\n  borderRadius: \"1vw\" \n}\n\nconst innerHistoryBox = {\n  position: \"absolute\",\n  top: \"65%\", \n  background: styles.innerCashBoxColor,\n  height: \"15%\",\n  width: \"100%\",\n  overflowY: \"scroll\",\n  overflowX: \"auto\"\n  //fontWeight: \"800\"\n}\n\nconst historyBoxDelete = {\n  position: \"absolute\",\n  bottom: \"0%\",\n  right: \"0%\", \n  background: styles.lightCanvasColor,\n  height: \"100%\",\n  width: \"19%\",\n  borderRadius: 0\n}\n\nconst innerCashBox = {\n  position: \"absolute\",\n  top: \"12%\", \n  background: styles.innerCashBoxColor,\n  height: \"76%\",\n  width: \"100%\",\n  overflowY: \"scroll\",\n  overflowX: \"auto\"\n  //fontWeight: \"800\"\n}\n\nconst cashContents = { \n  fontSize: \"2vw\",\n  width: \"100%\",\n  height:\"2.6vw\",\n  color: styles.positiveColor\n}\nconst negCashContents = { \n  fontSize: \"2vw\",\n  width: \"100%\",\n  height:\"2.6vw\",\n  color: styles.negativeColor\n}\n\nconst initalInvStyle = { \n  fontSize: \"2vw\",\n  width: \"auto\",\n  height:\"2.6vw\",\n  marginLeft: \"15%\"\n}\nconst negInitialInvStyle = { \n  fontSize: \"2vw\",\n  width: \"auto\",\n  height:\"2.6vw\",\n  marginLeft: \"15%\",\n  color: styles.negativeColor,\n \n\n}\n\nconst lineBreak = {\n    background: \"#F0F0F0\",\n    height: \"1px\",\n    left: \"15%\",\n    width: \"75%\",\n    position: \"absolute\"\n}\nconst minusButtonStyle = {\n \n  fill: styles.innerCashBoxColor,\n  color: styles.medLightGray,\n  stroke: styles.medLightGray,\n  strokeWidth: \"8%\"\n}\nconst minusLineStyle = {\n  stroke: styles.medLightGray,\n  strokeWidth: \"8%\"\n}\n\nconst header1 = {\n  fontWeight: \"bold\",\n  fontSize: \"1vw\",\n  textAlign: \"center\"\n}\nconst header3 = {\n  fontWeight: \"bold\",\n  fontSize: \"1.2vw\",\n  textAlign: \"center\"\n}\nconst header2 = {\n  position: \"absolute\",\n  fontWeight: \"bold\",\n  fontSize: \"2vw\",\n  left: \"5%\"\n  \n}\nconst cashInputStyle = {\n  position: \"absolute\",\n  background: \"none\",\n  width: \"57%\",\n  height: \"14%\",\n  left: \"27%\",\n  fontSize: \"2vw\",\n  border: \"none\",\n  color: styles.positiveColor\n}\n\nconst negCashInputStyle = {\n  position: \"absolute\",\n  background: \"none\",\n  width: \"57%\",\n  height: \"14%\",\n  left: \"25%\",\n  fontSize: \"2vw\",\n  border: \"none\",\n  color: styles.negativeColor\n}\nconst cashBottom= {\n  position: \"absolute\",\n  top: \"88%\",\n  left: \"0%\",\n  width: \"100%\",\n  height: \"12%\",\n  background: \"none\",\n  fontWeight: \"500\",\n  fontSize: \".9vw\",\n  color: styles.darkGray\n}\nconst plusButtonStyle = {\n \n  fill: styles.innerCashBoxColor,\n  color: styles.darkGray,\n  stroke: styles.darkGray,\n  strokeWidth: \"5%\"\n}\nconst plusLineStyle = {\n  stroke: styles.darkGray,\n  strokeWidth: \"5%\"\n}\nconst plusBtnContainer= {\n  position: \"absolute\",\n  paddingLeft: \"70%\",\n  paddingTop: \"4%\"\n}\nconst cashBtmTxt = {\n  position: \"absolute\",\n  left: \"28%\",\n \n}\n\nconst sliderStyle = {\n  position: \"absolute\",\n  top: \"40%\",\n  left: \"18%\",\n  background: \"styles.canvasColor\",\n  cursor: \"pointer\",\n  width: \"60%\"\n}\n\n\n\nconst snapButtonPos = {\n  position: \"absolute\",\n  bottom: \"15%\",\n  left: \"17%\"\n}\nconst histTitle = {\n  position: \"absolute\",\n  fontSize: \"1vw\",\n  bottom: \"33%\",\n  left: \"8%\",\n}\n\nconst histTitle2 = {\n  position: \"absolute\",\n  fontSize: \"1vw\",\n  bottom: \"33%\",\n  right: \"16%\",\n}\n\n\n\nfunction App() {\n\n\n\n//hook that makes sure dom is rerendered if a button is clicked, even if theNpv hasn't changed\nconst [npvRan, setNpvRan] = React.useState(0);\n\nlet zeroCashInputStyle = {\n  position: \"absolute\",\n  background: \"none\",\n  width: \"80%\",\n  height: \"14%\",\n  fontSize: \".8vw\",\n  border: \"none\",\n  color: styles.negativeColor\n}\nfunction minusButton(value) {\n  return(\n      <svg height=\"1.2vw\" width=\"2vw\" onClick= {() => {cashFlows.splice(value,1); findNPV(cashFlows, calcData.r, calcData.initialInvest)} } >\n  \n        <circle style={minusButtonStyle} cx=\"56%\" cy=\"50%\" r=\"32%\"/>\n        <line style={minusLineStyle} x1=\"44%\" y1=\"50%\" x2=\"67%\" y2=\"50%\"/>    \n      </svg>\n  )\n}\n\n \nfunction cashFlowPlusBtn() {\n  return(\n    <svg height=\"1.7vw\" width=\"1.7vw\" style={plusBtnContainer} onClick= {() => {if (calcData.initialInvest != \"\"){ cashFlows.push(0); findNPV(cashFlows, calcData.r, calcData.initialInvest)}} } >   \n      <circle style={plusButtonStyle} cx=\"50%\" cy=\"50%\" r=\"38%\"/>\n      <line style={plusLineStyle} x1=\"30%\" y1=\"50%\" x2=\"70%\" y2=\"50%\"/>    \n      <line style={plusLineStyle} x1=\"50%\" y1=\"70%\" x2=\"50%\" y2=\"30%\"/> \n    </svg>\n  ) \n}\n\nfunction dollSymbol(value, color) {\n  let numSize = .6; \n  let numX = \"39%\";\n  let numY = \"86%\";\n  if (value > 9) {\n    numSize= .5;\n    numX = \"31%\"\n    numY = \"85%\"\n  }\n \n  return(\n    <svg style={{position: \"absolute\", background: \"none\"}} height=\"2.6vw\" width=\"1.5vw\" >\n      <text style={{fontSize: \"2.2vw\", fontWeight: \"400\", fill: color}} x=\"4%\" y=\"80%\">$</text>\n      <circle style={{fill: color}} cx=\"52%\" cy=\"78%\" r=\"18%\"/>\n      <text style={{fontSize: numSize + \"vw\", fontWeight: \"700\", fill: styles.innerCashBoxColor}} x={numX} y={numY}>{value}</text>\n    </svg>\n  ) \n}\nfunction snapNPVBtn() {\n  return (<Button style={{position: \"absolute\", width: \"10vw\", fontSize: \"1.5vw\", color: styles.darkGray, fontFamily: 'Fira Code',  border: \"1px solid\", padding: \".2vw\"}} variant=\"outlined\"  onClick ={ () => {calcData.npvSnap.unshift({x: calcData.r, y: calcData.theNPV }); logNPV(); setNpvRan(npvRan + 1); }} disableElevation >FIND NPV</Button>)\n  //return (<button style={snapNPVBtnStyle} name=\"npvsnap\" onClick ={ () => {calcData.npvSnap.push({x: calcData.r, y: calcData.theNPV }); calcData.snapGraphX++; setNpvRan(npvRan + 1); }}>FIND NPV</button>  )\n}\n\nfunction logNPV() {\n \n  loggedNPVs.unshift(\n    <div style={{ paddingLeft:\"6%\"}}>\n      <p style={{ }}>{calcData.theNPV.toFixed(2)}{\"_____________\"}{calcData.r}%</p><p style = {{float: \"right\", display: \"inline\"}}></p>\n    </div>\n  )\n}\n\nfunction CashFlowContents() {\n  let dollColor = styles.negativeColor;\n\n  if (calcData.initialInvest === \"\") {\n    zeroCashInputStyle.fontSize = \".8vw\";\n  }\n  else if (calcData.initialInvest >= 0 && calcData.initialInvest != \"\") {\n    zeroCashInputStyle.fontSize = \"2vw\";\n    zeroCashInputStyle.color = styles.negativeColor;\n  }\n  else if (calcData.initialInvest < 0) {\n    zeroCashInputStyle.fontSize = \"2vw\";\n    zeroCashInputStyle.color = styles.positiveColor;\n    dollColor = styles.positiveColor;\n  }\n  let contents = [];\n\n      contents.push(\n        <div>\n          <div style={{position: \"absolute\", left: \"2%\", bottom: \"100%\"}}>{dollSymbol(0, dollColor)}</div>\n          <div style={negInitialInvStyle}>        \n            <input style={zeroCashInputStyle} placeholder=\"<Enter Initial Investment Here>\"  key={\"inINVhold\"}  type=\"text\" name ={\"initialInv\"} onChange={(event) => {calcData.initialInvest = event.target.value; findNPV(cashFlows, calcData.r, calcData.initialInvest)}} />  \n          </div>\n          <div style={lineBreak}/>\n        </div>\n      )\n\n  \n\n  for (let value in cashFlows) {\n    if (cashFlows[value] < 0){\n      contents.push(\n        <div>\n          <div style={negCashContents}>\n            {minusButton(value)} \n            {dollSymbol(parseInt(value) + 1, styles.negativeColor)}  \n            <input style={negCashInputStyle} key={\"cashflow\" + value} value={cashFlows[value]} type=\"text\" name ={value + \"cashFlow\"} onChange={(event) => {cashFlows[value] = event.target.value; findNPV(cashFlows, calcData.r, calcData.initialInvest)}} />  \n          </div>\n          <div style={lineBreak}/>\n        </div>\n        )\n\n    }\n    else {\n    contents.push(\n      <div>\n        <div style={cashContents} >\n          {minusButton(value)} \n          {dollSymbol(parseInt(value) + 1, styles.positiveColor)}   \n          <input style={cashInputStyle} key={\"cashflow\" + value} value={cashFlows[value]} type=\"text\" name ={value + \"cashFlow\"} onChange={(event) => {cashFlows[value] = event.target.value; findNPV(cashFlows, calcData.r, calcData.initialInvest)}} />  \n        </div>\n        <div style={lineBreak}/>\n      </div>\n      )\n    }\n  }\n  return (contents)\n}\nfunction DiscountRateSlider() {\n  return(\n    <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" style={sliderStyle} name =\"ROR\" onChange={(event) => {calcData.r = event.target.value; findNPV(cashFlows, calcData.r, calcData.initialInvest)}} />\n  )   \n}\n\nreturn (\n  <div style={calcCanvas}>\n    <p style={header2}>NET PRESENT VALUE CALCULATOR</p>\n    <div style={cashFlowBox}><p style={header1}>CASH FLOWS</p>\n      <div style={innerCashBox}>{CashFlowContents()}</div>\n      <div style={cashBottom}>{cashFlowPlusBtn()}<p style={cashBtmTxt}>Add another</p></div>\n    </div>\n\n    <div style={dRateBox}>\n      <p style={header1}>DISCOUNT RATE: {calcData.r}%</p>{DiscountRateSlider()}\n    </div>\n\n    <div style={sketchBox}><Sketch/></div>\n    <div style={historyBox}><p style={header3}>HISTORY</p>\n      <Graph/>\n      <p style={histTitle}>NPV</p><p style={histTitle2}>RATE</p>\n      <div style={innerHistoryBox}>{loggedNPVs}</div>\n      <div style={snapButtonPos}>{snapNPVBtn()}</div>\n    </div>\n  </div>\n)\n\n  function findNPV(cashFlows, r, initialInvestValue) {\n    //push r value to interface \n   \n    //ensures DOM will update even if npv didnt change\n    setNpvRan(npvRan + 1);\n    \n  \n    calcData.initialInvest = initialInvestValue;\n    let npvOut = null;\n    let rDec = r/100;\n    let npv = null;\n    //reset modded cash flows\n    calcData.modCashFlows = [];\n    calcData.modCashFlows.push(calcData.initialInvest * -1);\n    for (let flow in cashFlows) {\n     let powerOf=parseInt(flow) +  1;\n     let discountedFlow = cashFlows[flow] / Math.pow(1 + rDec,  powerOf);\n     calcData.modCashFlows.push(discountedFlow);\n     npv += discountedFlow;\n    }\n    npvOut = (npv - calcData.initialInvest);\n    calcData.theNPV = npvOut;\n    \n    //return (npvOut);\n  }\n  //{cashFlows.map((number) => <li key ={number.toString()}>{number}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n} \n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}